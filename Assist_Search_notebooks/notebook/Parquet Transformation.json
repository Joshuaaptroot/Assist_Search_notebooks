{
	"name": "Parquet Transformation",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "AssistSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0a965e46-e7a6-4543-9ad8-bb552a848160"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/5452efdb-4775-4568-857a-4f1d63d4d934/resourceGroups/AssistSearchGroup/providers/Microsoft.Synapse/workspaces/assistsearchworkspace/bigDataPools/AssistSpark",
				"name": "AssistSpark",
				"type": "Spark",
				"endpoint": "https://assistsearchworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/AssistSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Read parquet file and show information"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"file_path = \"abfss://output@assistdatalakegen2.dfs.core.windows.net/part-00001-38b82ec0-01d6-4ae8-8c35-8209a30b07e1-c000.snappy.parquet\"\r\n",
					"\r\n",
					"# Load the Parquet file\r\n",
					"df = spark.read.parquet(file_path)\r\n",
					"\r\n",
					"# Show schema and sample data\r\n",
					"df.printSchema()\r\n",
					"df.show()"
				],
				"execution_count": 38
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Remove duplicates"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = df.dropDuplicates()\r\n",
					"df.show()"
				],
				"execution_count": 39
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Add defaults to missing values"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import col\r\n",
					"\r\n",
					"df = df.fillna({\"Columns2\": \"default_value\"})\r\n",
					"df = df.na.drop(subset=[\"Column3\"])\r\n",
					"\r\n",
					"\r\n",
					"df.show()"
				],
				"execution_count": 40
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Tokenize text for AI usage"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.ml.feature import Tokenizer\r\n",
					"\r\n",
					"tokenizer = Tokenizer(inputCol=\"Column3\", outputCol=\"tokens\")\r\n",
					"df = tokenizer.transform(df)\r\n",
					"\r\n",
					"df.show()\r\n",
					""
				],
				"execution_count": 41
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Add metadata for further context for NLP\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import lit, current_date\r\n",
					"\r\n",
					"df = df.withColumn(\"source\", lit(\"Wikipedia\"))\r\n",
					"df = df.withColumn(\"processing_date\", current_date())\r\n",
					""
				],
				"execution_count": 42
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"add Unique Identifier necessary for stoagre in CosmosDB"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import monotonically_increasing_id\r\n",
					"from pyspark.sql.functions import col\r\n",
					"\r\n",
					"df = df.withColumn(\"id\", monotonically_increasing_id())\r\n",
					"\r\n",
					"df = df.withColumn(\"id\", col(\"id\").cast(\"string\"))\r\n",
					"\r\n",
					""
				],
				"execution_count": 49
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.show()"
				],
				"execution_count": 50
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"Load up to cosmos DB for application"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"cosmos_db_config = {\r\n",
					"    \"spark.cosmos.accountEndpoint\": \"https://assistcosmodb.documents.azure.com:443/\",\r\n",
					"    \"spark.cosmos.accountKey\": \"s\",\r\n",
					"    \"spark.cosmos.database\": \"AssistAIDB\",\r\n",
					"    \"spark.cosmos.container\": \"AssistAIContainer\",\r\n",
					"    \"spark.cosmos.write.strategy\": \"ItemOverwrite\" \r\n",
					"}\r\n",
					"# Write the DataFrame to Cosmos DB\r\n",
					"df.write \\\r\n",
					"    .format(\"cosmos.oltp\") \\\r\n",
					"    .options(**cosmos_db_config) \\\r\n",
					"    .mode(\"append\") \\\r\n",
					"    .save()\r\n",
					""
				],
				"execution_count": 51
			}
		]
	}
}